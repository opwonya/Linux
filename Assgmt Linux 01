The questions below assume the Bash shell. If you prefer to give answers pertaining to
a different shell, please specify which and make it clear for each question.


* Name 6 different Linux distributions, and state which major packaging format
  they use (e.g. RPM or DEB).

  Red Hat Enterprise (RPM)
  Fedora (RPM)
  CentOS (RPM)
  Scientific Linux (RPM)
  Debian (DEB)
  Ubuntu (DEB)
  Knoppix (DEB)


* Give a brief overview of the different sections of the Man Pages.

  1      User Commands.
         Most shell utilities (e.g. bash, grep, sort etc)
  2      System Calls.
         C library functions for OS programming (e.g. chown, chmod, pipe, wait)
  3      C Library Functions.
         General C library calls, including I/O, Maths, Malloc, Getopt, pThreads, String, Time
  4      Devices and Special Files. 
         Docs for special file formats, such as block, char, line printer
         - the files in /dev
  5      File Formats and Conventions
         Expected file formats of configuation files in /etc (e.g. fstab,
         passwd, shadow, yum.conf)
  6      Games et. Al.
  7      Miscellanea (e.g. some protocols such as IP, ICMP, ASCII)
  8      System Administration tools and Deamons
         Tools which can be only run by the root user, such as formatting
         partitions, user management, printer management, software management


* Describe how you would change the shell prompt to make it BOLD and display in the colour red.

  The 'PS1' shell variable controls the appearance of the prompt in bash.
  PS1='\[\e[31;1m\]\u \w \$ \[\e[30;0m\]'


* Given a directory of files, how would you list the files while sorting them
  in file size in descending order? And in ascending order?

  ls -lS	# descending
  ls -lSr	# ascending


* Starting in your home directory (on 'chuck'), list at least two ways to
  change to the '/tmp' directory. 

  cd ../../../../../tmp/
  cd /tmp


* On the command-line, give at least 2 examples of how would you delete a file called '-i'
  (without the qoutes)?

  rm ./-i
  rm -- -i
  find . -maxdepth 1 -name "-i" -exec rm {} \;


* Give at least 2 ways to show the contents of a directory called "My Docs"
  using 'ls -l'. I.e. how do you get around SPACEs in a file/folder name using
  the shell.

  ls -l "My Docs"
  ls -l My\ Docs


* Using the 'date' command, how would you display the current date/time in the following
  format: YYYYMMDDHHMMSS. How would you display the date in that format from
  exactly 1 week ago from the time you run the command?

  date +%Y%m%d%H%M%S
  date +%Y%m%d%H%M%S -d "1 week ago"


* What is the Unix Epoch? How would you display it using the 'date' command? 

  The time at 00:00:00 on the 1st of January 1970 UTC is called the Unix Epoch.
  Unix time (or POSIX time) is a measure of time, defined as the number of
  seconds since 00:00:00 on the 1st of January 1970 UTC.
  It is widely used in Unix-like and many other operating systems and file
  formats.

  date +%s


* Using the 'cal' command, how would you display the full calendar year, with
  weeks starting in a Monday? 

  cal -ym


* What is the purpose of the PATH environment variable. How would you add a new location to it?

  This is the search path for commands. Any directories listed in here will be
  checked (in order) for a typed command.

  In the Bash shell, you add a new location as follows:
  export PATH=$PATH:/my/new/location


* Using shell wildcards (fileglobs), how would you list:

  - All files starting with the letter k?
  - All files starting with the letter k, with a .txt extension?
  - All files starting with an upper case letter?
  - All files with 4 characters, where the third character is a number? 

  ls k*
  ls k*.txt
  ls [[:upper:]]*
  ls ??[0-9]?


* What is the purpose of the umask? How would you ensure that every new file that you create has
  the following permissions: full access for you, read-only access for your
  group, and no access for anyone else?

  The umask defines the permissions that will be assigned to new files and directories.

  Set your umask as follows:
  umask 027

  Note: while "umask 037" strictly speaking fits the exact wording of the
  question, it is not correct in practice (think of creating directories or
  programs/scripts).

  Note that to make the new umask permanent, you must add that line to your
  shell init file (~/.bashrc). Similarly, if you wish to set it on other open
  shells, you must source that file ("source ~/.bashrc").


* How would you change the behaviour of the delete command to prompt for
  confirmation before deleting files? 

  alias rm="rm -i"

  Note that to make the new alias permanent, you must add that line to your
  shell init file (~/.bashrc). Similarly, if you wish to set it on other open
  shells, you must source that file ("source ~/.bashrc").



